# productive environment with supervisor and ZEO
# TODO: nginx, varnish, etc.

[buildout]
extends =
    base.cfg

parts +=
    supervisor
    zeoserver
    instance1 instance2
    chown-zeo
    atcontenttypes-conf


[ports]
# Specify the ports on which your Zope installation will listen.
# ZEO Server
zeo-address = 127.0.0.1:8082
# Zope client 1
instance1-address = 8080
# Additional clients:
instance2-address = 8081


[supervisor]
# starten:  bin/supervisord (das hier bei Server-Reboot starten)
# kontrollieren:  bin/supervisorctl
# shut down all processes with:
# $ bin/supervisorctl shutdown
# See bin/supervisorctl help for details about other commands.
# Webinterface: localhost:port
recipe = collective.recipe.supervisor
port = 8083
user = ${users:supervisor-admin}
password = ${passwords:supervisor-admin}
programs =
    10 zeo          ${zeoserver:location}/bin/runzeo        true ${users:zope}
    20 instance1    ${buildout:directory}/bin/instance1     [console]  true ${users:zope}
    20 instance2    ${buildout:directory}/bin/instance2     [console]  true ${users:zope}
# 30 cache      ${buildout:directory}/bin/cache                   true ${users:cache}
# 40 balancer   ${nginx-build:location}/sbin/nginx [-c ${balancer:run-directory}/balancer.conf] true     ${users:balancer}
# 50 main       ${nginx-build:location}/sbin/nginx [-c ${main:run-directory}/main.conf]         true


# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
# effective-user = zope
# TODO: Brauchen wir den effective-user ?

[zeoserver]
# Use this section to install and configure a Zope
# Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
recipe = plone.recipe.zeoserver
zeo-address = ${ports:zeo-address}
# if we try to start as root, Zope will switch to the user below
# effective-user = ${buildout:effective-user}
# Put the log, pid and socket files in var/zeoserver
zeo-log     = ${buildout:directory}/var/zeoserver/zeoserver.log
pid-file    = ${buildout:directory}/var/zeoserver/zeoserver.pid
socket-name = ${buildout:directory}/var/zeoserver/zeo.zdsock
# blob-storage = ${buildout:directory}/var/blobstorage # hier default-Wert. Dieser ist verschieden, je nachdem, ob shared-blob. siehe http://pypi.python.org/pypi/plone.recipe.zope2instance


[chown-zeo]
# This recipe is used to set permissions for root mode installs
# For options see http://pypi.python.org/pypi/plone.recipe.command
recipe = plone.recipe.command
command =echo Dummy references to force this to execute after referenced parts
    echo ${backup:location} 
    touch ${buildout:directory}/var/zeoserver/zeoserver.log
update-command = ${chown-zeo:command}



[instance1]
recipe = plone.recipe.zope2instance
zeo-client = on
zeo-address = ${zeoserver:zeo-address}
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user = ${users:zope}:${passwords:zope}
# effective-user = ${buildout:effective-user}
http-address = ${ports:instance1-address}
# webdav-address = 9590
zodb-cache-size = 5000
# TODO: size of blobstorage setzen
zeo-client-cache-size = 1000MB
zeo-client-blob-cache-size = 1000MB
shared-blob = on
# blob-storage = ${zeoserver:blob-storage}
debug-mode = off
verbose-security = off
deprecation-warnings = off
# Put the log, pid, lock files in var/instance1
event-log = ${buildout:directory}/var/instance1/event.log
z2-log    = ${buildout:directory}/var/instance1/Z2.log
pid-file  = ${buildout:directory}/var/instance1/instance1.pid
lock-file = ${buildout:directory}/var/instance1/instance1.lock

eggs =
    ${buildout:eggs}
zcml = 
    ${buildout:zcml}
develop = 
    ${buildout:develop}
products =
    ${buildout:directory}/products
# You may also control the environment variables for the instance.
environment-vars =
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    zope_i18n_compile_mo_files true
    PYTHONHASHSEED random
zope-conf-additional =
    locale de_CH.UTF-8


[instance2]
# a copy of instance1, except adjusted address and var location
<= instance1
http-address = ${ports:instance2-address}
event-log = ${buildout:directory}/var/instance2/event.log
z2-log    = ${buildout:directory}/var/instance2/Z2.log
pid-file  = ${buildout:directory}/var/instance2/instance2.pid
lock-file = ${buildout:directory}/var/instance2/instance2.lock


[atcontenttypes-conf]
recipe                 = plone.recipe.atcontenttypes
zope-instance-location = ${instance1:location}
max-file-size          = ATImage:600kb
                         ATFile:10mb
                         ATNewsItem:500kb
# max-image-dimension    = ATNewsItem:640,400
#                          ATImage:2048,2048
# pil-quality            = 95